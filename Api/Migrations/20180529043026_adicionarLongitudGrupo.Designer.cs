// <auto-generated />
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180529043026_adicionarLongitudGrupo")]
    partial class adicionarLongitudGrupo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Api.Models.Apuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MarcadoB");

                    b.Property<int>("MarcadorA");

                    b.Property<int>("ProgramacionJuegoId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ProgramacionJuegoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuesta");
                });

            modelBuilder.Entity("Api.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BanderaUrl")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("DiferenciaGoles");

                    b.Property<bool>("Estado");

                    b.Property<int>("GolesAFavor");

                    b.Property<int>("GolesEnContra");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("PartidosEmpatados");

                    b.Property<int>("PartidosGanados");

                    b.Property<int>("PartidosJugados");

                    b.Property<int>("PartidosPerdidos");

                    b.Property<string>("PublicId");

                    b.Property<int>("Puntos");

                    b.HasKey("Id");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("Api.Models.Fase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.ToTable("Fase");
                });

            modelBuilder.Entity("Api.Models.GrupoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("GrupoUsuario");
                });

            modelBuilder.Entity("Api.Models.ProgramacionJuego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EquipoAId");

                    b.Property<int>("EquipoBId");

                    b.Property<int?>("FaseId");

                    b.Property<DateTime>("FechaJuego");

                    b.Property<int>("GrupoEquipoId");

                    b.Property<int>("MarcadorA");

                    b.Property<int>("MarcadorB");

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.HasIndex("EquipoAId");

                    b.HasIndex("EquipoBId");

                    b.HasIndex("FaseId");

                    b.ToTable("ProgramacionJuego");
                });

            modelBuilder.Entity("Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodUsuario")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<byte[]>("ContrasenaHash")
                        .IsRequired();

                    b.Property<byte[]>("ContrasenaSalt")
                        .IsRequired();

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(240);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Api.Models.UsuarioGrupoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<int>("GrupoUsuarioId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("GrupoUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioGrupoUsuario");
                });

            modelBuilder.Entity("Api.Models.Apuesta", b =>
                {
                    b.HasOne("Api.Models.ProgramacionJuego", "ProgramacionJuego")
                        .WithMany()
                        .HasForeignKey("ProgramacionJuegoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.ProgramacionJuego", b =>
                {
                    b.HasOne("Api.Models.Equipo", "EquipoA")
                        .WithMany()
                        .HasForeignKey("EquipoAId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Equipo", "EquipoB")
                        .WithMany()
                        .HasForeignKey("EquipoBId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Fase", "Fase")
                        .WithMany()
                        .HasForeignKey("FaseId");
                });

            modelBuilder.Entity("Api.Models.UsuarioGrupoUsuario", b =>
                {
                    b.HasOne("Api.Models.GrupoUsuario", "GrupoUsuario")
                        .WithMany()
                        .HasForeignKey("GrupoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
